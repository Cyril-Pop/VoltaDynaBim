{
  "Uuid": "fe89b348-d613-4df2-b860-a51b0fb10a04",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Test DynamoTensorflow_v4",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "Polygon": {
        "Key": "Autodesk.DesignScript.Geometry.Polygon",
        "Value": "ProtoGeometry.dll"
      },
      "Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      },
      "Circle": {
        "Key": "Autodesk.DesignScript.Geometry.Circle",
        "Value": "ProtoGeometry.dll"
      },
      "Sphere": {
        "Key": "Autodesk.DesignScript.Geometry.Sphere",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1..6.0..#3;\n1..5.0..#2;\n2.5..5.8..#3;",
      "Id": "5d6c188d7dd7465da5d67cd2378edf73",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d2d60ddcccd840f3bf6d8d901fa5c5d4",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f4031230b7a49d3a126718500ac911a",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86ef52b86f9c435590bec9e9f5546fbc",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "pts = Point.ByCoordinates(n<0>, n<1>, 0);\nflatPts = List.Flatten(pts);\nsph = Sphere.ByCenterPointRadius(flatPts, 0.15);",
      "Id": "f02d452b143448928f1df25e209099cd",
      "Inputs": [
        {
          "Id": "2c802f94fb1d469fb5f235f1b8c9da5f",
          "Name": "n",
          "Description": "n",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0218a6f26a014ef7bbd263436d95bf55",
          "Name": "",
          "Description": "pts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9aae9e10eff4c61a7f69da0b0431777",
          "Name": "",
          "Description": "flatPts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95a281cb00fc44e9a53ad068dc462afd",
          "Name": "",
          "Description": "sph",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "nbrPoint = 200;\n//randomPts = Point.ByCoordinates(Math.RandomList(nbrPoint, -0.1, 1, 1) * 10, Math.RandomList(nbrPoint) * 10, 0);\nrandomPts = List.Shuffle(List.Flatten(Point.ByCoordinates(n<0> , n<1> , 0)));\nradius = 2.7;\npt = Point.ByCoordinates(4.7,4.7,0);\nc = Circle.ByCenterPointRadius(pt, radius);\n//Boolean list Test if each random point is inside circle\nboolList = randomPts.DistanceTo(pt) < radius;\nrandomPts.DistanceTo(pt);",
      "Id": "9d7782212c2c4c54bd4235cecc36f3d9",
      "Inputs": [
        {
          "Id": "7120defcf8904767898c73a88edbb252",
          "Name": "n",
          "Description": "n",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d73534513d0f434db9d4e97c39c4cf1f",
          "Name": "",
          "Description": "nbrPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8699a32a329f461d90c009bb03bd87b0",
          "Name": "",
          "Description": "randomPts",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62a732fe013746448a3603c87ac6ce6f",
          "Name": "",
          "Description": "radius",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82a9e50df67448e7b21610ab94bcf120",
          "Name": "",
          "Description": "pt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f523af8d3ce246ee96fc436c0a10996c",
          "Name": "",
          "Description": "c",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c14b5d95cfea4b31946c4edc9f4c33fb",
          "Name": "",
          "Description": "boolList",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73055cf038b34571b4dcf0232ac8fcb3",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nimport System\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\nclr.AddReference('DSCoreNodes')\r\nfrom DSCore import Color\r\n\r\nclr.AddReference('System.Windows.Forms')\r\nimport System.Windows.Forms\r\nfrom System.Windows.Forms import MessageBox, MessageBoxButtons\r\n\r\ndirAppLoc = System.Environment.GetFolderPath(System.Environment.SpecialFolder.LocalApplicationData) \r\nsys.path.append(dirAppLoc + r'\\python-3.8.3-embed-amd64\\Lib\\site-packages')\r\ndatacsv = dirAppLoc + \"\\\\dataTensorFlow.csv\"\r\n\r\n# force to reload module\r\nif \"tensorflow\" in sys.modules:\r\n    del sys.modules[\"tensorflow\"]\r\n\r\nimport numpy as np\r\nimport tensorflow as tf\r\nfrom tensorflow import keras\r\nfrom tensorflow.keras import layers\r\nfrom tensorflow.python.client import device_lib\r\n\r\nfrom io import StringIO    \r\n\r\nsys.stdout = StringIO()\r\nprint(\"Num GPUs Available: \", len(tf.config.list_physical_devices('GPU')))\r\nprint(device_lib.list_local_devices())\r\n\r\nLEARNING_RATE = 0.01 \r\nEPOCH_COUNT = 2000 \r\nmax_accuracy = 80\r\n# get X and Y from randoms points\r\nx = np.array([[pt.X, pt.Y] for pt in IN[0]], dtype=np.float32) \r\n# convert bool to integer\r\ny = np.array([int(x) for x in IN[1]], dtype=np.float32) \r\n# get X and Y from Test points for prediction\r\nlstSpheres = IN[2]\r\ntestPoints = np.array([[sphere.CenterPoint.X, sphere.CenterPoint.Y] for sphere in lstSpheres], dtype=np.float32)\r\noutGeometry = []\r\n\r\n### Different activation ###\r\n# softmax , tanh , relu , sigmoid\r\n#\r\n### Different loss ###\r\n# binary_crossentropy , mean_squared_error , squared_hinge , categorical_crossentropy , sparse_categorical_crossentropy\r\n#\r\nmodel = keras.Sequential()\r\nmodel.add(keras.layers.Dense(units=5,  input_shape=x.shape, activation='relu'))\r\nmodel.add(keras.layers.Dense(units=5, activation='relu'))\r\nmodel.add(keras.layers.Dense(units=2, activation='sigmoid')) \r\n\r\n#optimizer = tf.keras.optimizers.SGD(learning_rate = LEARNING_RATE)\r\noptimizer = tf.keras.optimizers.Adam(learning_rate = LEARNING_RATE)\r\n\r\nmodel.compile(optimizer=optimizer,\r\n              loss='sparse_categorical_crossentropy',\r\n              metrics=['accuracy'])\r\n \r\n# train the model  \r\ni = 0\r\nfinal_accuracy = 0\r\nwhile i < 3 and final_accuracy <= max_accuracy * 0.01:\r\n\r\n    model.fit(x, y, epochs=EPOCH_COUNT)\r\n    # get the final accuracy\r\n    final_accuracy = round(model.history.history['accuracy'][-1], 2)\r\n    i += 1\r\n\r\nmodel.summary()\r\nprint(f\"final_accuracy : {final_accuracy}\")\r\n# test Prediction\r\nif final_accuracy > max_accuracy * 0.01:\r\n    result1 = model.predict(testPoints)\r\n    # color the result\r\n    for idx, (sph, (out1, out2)) in enumerate(zip(lstSpheres, result1)):\r\n        factor = 1 if out2 > 0.001 else 0\r\n        print(\"probability shpere at index {} is inside circle : {}%\".format(idx, round((1 - out1) * factor,  2) * 100))\r\n        if out1  < 0.1 and out2 > 0.001:\r\n            geocolor = GeometryColor.ByGeometryColor(sph, Color.ByARGB(255,0,255,0))\r\n            outGeometry.append(geocolor)\r\n        else:\r\n            geocolor = GeometryColor.ByGeometryColor(sph, Color.ByARGB(255,255,0,0))\r\n            outGeometry.append(geocolor)    \r\nelse:\r\n    MessageBox.Show(f'precsion du modele insuffisante {final_accuracy * 100}% (< {max_accuracy}%)\\n relancer le script', 'Error', MessageBoxButtons.OK)\r\n    outGeometry = lstSpheres\r\n    result1 = []\r\n\r\nsys.stdout.seek(0)\r\nreaderstdout =  sys.stdout.read()\r\nOUT = readerstdout, result1, outGeometry",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "995e33f2d0fb4878b8d60b8b8aa0f371",
      "Inputs": [
        {
          "Id": "beb4e08c185049a08c903e194710804a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e52f3dbf19e9484f80d3413a18c640ae",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2ef964b3a8741e283e44885bea1e0a6",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb61c4378da343b0ba910dc1c78d8c3f",
          "Name": "OUT",
          "Description": "Résultat du script Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Exécute un script Python intégré."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.1..9..#12;",
      "Id": "fda69ddd8ce9453d8aa54665f399db80",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0a1c1094e94a4e94abbdaa1a9ff65137",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "46a3a667-ec7a-49ed-8675-ed77333ecd8e",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "fe5b38500fef4218b661c63787d75f98",
      "Inputs": [
        {
          "Id": "89a7336adf4c4b65a7eb1f3ba305ee47",
          "Name": "input",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "091e880c0b1c443084b2d32301f35059",
          "Name": "addIndexes",
          "Description": "bool\nValeur par défaut : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e2ca6c243504bf6a4111b3e97b95e93",
          "Name": "reset",
          "Description": "bool\nValeur par défaut : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6bbbb52e4754b1a8a6967728615b0e4",
          "Name": "str",
          "Description": "valeur de retour",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node that serializes the input information and presents it in a resizable text window."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x[0];",
      "Id": "0ef3e663904248799472ae709fe4c02d",
      "Inputs": [
        {
          "Id": "c12760c84e0446b5aa7e771c16d58346",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c805407d827448428764c6448acca5b2",
          "Name": "",
          "Description": "Valeur de l'expression à la ligne 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Permet de créer le code DesignScript directement"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "86ae0a08637144a0af1d6e70eec85ccd",
      "Inputs": [
        {
          "Id": "ee21fd106e384fae98714f4b1a00d202",
          "Name": "",
          "Description": "Noeud à évaluer.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd554129c0c34395896bffd3a41d432c",
          "Name": "",
          "Description": "Regarder le contenu.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualiser la sortie du noeud."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "69e5d2a9f081469b8c09c3ea00d62de7",
      "Inputs": [
        {
          "Id": "5d37a3c5d6bd458bb255d05f9cdbe561",
          "Name": "",
          "Description": "Noeud à évaluer.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01f9873501024b80b295c62bc63978c9",
          "Name": "",
          "Description": "Regarder le contenu.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualiser la sortie du noeud."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "bcd8f88d590f471abb41362890ac6c23",
      "Inputs": [
        {
          "Id": "ea19665f2c9e432395fa5d27742e3c15",
          "Name": "",
          "Description": "Noeud à évaluer.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f61f636f53d493ebc55f2e2b1b4e7bc",
          "Name": "",
          "Description": "Regarder le contenu.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualiser la sortie du noeud."
    }
  ],
  "Connectors": [
    {
      "Start": "86ef52b86f9c435590bec9e9f5546fbc",
      "End": "2c802f94fb1d469fb5f235f1b8c9da5f",
      "Id": "f24884157d6942a68b08f520d77bf063"
    },
    {
      "Start": "95a281cb00fc44e9a53ad068dc462afd",
      "End": "ea19665f2c9e432395fa5d27742e3c15",
      "Id": "f6c7bf113ea744e4a2361846b8496855"
    },
    {
      "Start": "8699a32a329f461d90c009bb03bd87b0",
      "End": "ee21fd106e384fae98714f4b1a00d202",
      "Id": "6a5626134e224163bbbd504645591ba3"
    },
    {
      "Start": "c14b5d95cfea4b31946c4edc9f4c33fb",
      "End": "5d37a3c5d6bd458bb255d05f9cdbe561",
      "Id": "324f7cbca3cb4266ba72d64dba193aa5"
    },
    {
      "Start": "eb61c4378da343b0ba910dc1c78d8c3f",
      "End": "c12760c84e0446b5aa7e771c16d58346",
      "Id": "4b6d8df9ae034d2ba06c6b968b3bbf79"
    },
    {
      "Start": "0a1c1094e94a4e94abbdaa1a9ff65137",
      "End": "7120defcf8904767898c73a88edbb252",
      "Id": "24ff8808d3f843f0bad8bb31473f4401"
    },
    {
      "Start": "c805407d827448428764c6448acca5b2",
      "End": "89a7336adf4c4b65a7eb1f3ba305ee47",
      "Id": "8ea6db8c2c2642b4ae36f1d2625fe1c6"
    },
    {
      "Start": "dd554129c0c34395896bffd3a41d432c",
      "End": "beb4e08c185049a08c903e194710804a",
      "Id": "d8a9b5d618fc4ac8849b4b8a1c2db91c"
    },
    {
      "Start": "01f9873501024b80b295c62bc63978c9",
      "End": "e52f3dbf19e9484f80d3413a18c640ae",
      "Id": "f034df18c35e404cab3d357408d5fc32"
    },
    {
      "Start": "5f61f636f53d493ebc55f2e2b1b4e7bc",
      "End": "a2ef964b3a8741e283e44885bea1e0a6",
      "Id": "c542828197d0476ba42519d3d1c5c246"
    }
  ],
  "Dependencies": [
    "46a3a667-ec7a-49ed-8675-ed77333ecd8e"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "spring nodes",
      "Version": "204.1.0",
      "ReferenceType": "Package",
      "Nodes": [
        "fe5b38500fef4218b661c63787d75f98"
      ]
    }
  ],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.0.3455",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Aperçu en arrière-plan",
      "EyeX": -1.170945405960083,
      "EyeY": 5.6209487915039063,
      "EyeZ": 0.39856445789337158,
      "LookX": 3.7047793865203857,
      "LookY": -8.8270301818847656,
      "LookZ": -6.912452220916748,
      "UpX": 0.27766305208206177,
      "UpY": 0.8090168833732605,
      "UpZ": -0.51806855201721191
    },
    "NodeViews": [
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "5d6c188d7dd7465da5d67cd2378edf73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 98.201541559406152,
        "Y": -358.23891341366561
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "f02d452b143448928f1df25e209099cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 343.2168489412033,
        "Y": -330.33031962314675
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9d7782212c2c4c54bd4235cecc36f3d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 166.61399144759082,
        "Y": -725.30426893625588
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script | Main Learning",
        "Id": "995e33f2d0fb4878b8d60b8b8aa0f371",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2118.4351576950285,
        "Y": -714.453924070143
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fda69ddd8ce9453d8aa54665f399db80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4.9955433008101409,
        "Y": -723.10476804904272
      },
      {
        "ShowGeometry": true,
        "Name": "ꟿ WatchDialog",
        "Id": "fe5b38500fef4218b661c63787d75f98",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2560.0332704073217,
        "Y": -719.41128609720352
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0ef3e663904248799472ae709fe4c02d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2398.0559798304603,
        "Y": -714.12442385162876
      },
      {
        "ShowGeometry": true,
        "Name": "Watch Points",
        "Id": "86ae0a08637144a0af1d6e70eec85ccd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 958.94537877119683,
        "Y": -742.91646008313717
      },
      {
        "ShowGeometry": true,
        "Name": "Watch is inside Circle (Bool)",
        "Id": "69e5d2a9f081469b8c09c3ea00d62de7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1274.5153844655495,
        "Y": -649.398899823447
      },
      {
        "ShowGeometry": true,
        "Name": "Watch Sphere for Test Model",
        "Id": "bcd8f88d590f471abb41362890ac6c23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 937.34827341221853,
        "Y": -252.20259812458448
      }
    ],
    "Annotations": [
      {
        "Id": "5d44c257da9a419fb6354b8ae1aeb35f",
        "Title": "Spheres",
        "Nodes": [
          "f02d452b143448928f1df25e209099cd",
          "5d6c188d7dd7465da5d67cd2378edf73"
        ],
        "Left": 88.201541559406152,
        "Top": -404.23891341366561,
        "Width": 732.01530738179724,
        "Height": 194.90859379051886,
        "FontSize": 30.0,
        "InitialTop": -358.23891341366561,
        "InitialHeight": 172.90859379051886,
        "TextblockHeight": 36.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "707ffc1db4794bafb0e624f98aa0e724",
        "Title": "Points for train Learning",
        "Nodes": [
          "9d7782212c2c4c54bd4235cecc36f3d9",
          "fda69ddd8ce9453d8aa54665f399db80"
        ],
        "Left": -14.995543300810141,
        "Top": -771.30426893625588,
        "Width": 909.609534748401,
        "Height": 288.0,
        "FontSize": 30.0,
        "InitialTop": -725.30426893625588,
        "InitialHeight": 147.19950088721316,
        "TextblockHeight": 36.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "4de6781e3e8a4218856c0e878c68437b",
        "Title": "for trainning Model",
        "Nodes": [
          "86ae0a08637144a0af1d6e70eec85ccd",
          "69e5d2a9f081469b8c09c3ea00d62de7"
        ],
        "Left": 948.94537877119683,
        "Top": -788.91646008313717,
        "Width": 564.57000569435263,
        "Height": 517.51756025969019,
        "FontSize": 30.0,
        "InitialTop": -742.91646008313717,
        "InitialHeight": 238.51756025969019,
        "TextblockHeight": 36.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "386a67cc419b4f32b3dab7296e1f3a78",
        "Title": "for test Learning Model",
        "Nodes": [
          "bcd8f88d590f471abb41362890ac6c23"
        ],
        "Left": 927.34827341221853,
        "Top": -334.20259812458448,
        "Width": 310.0,
        "Height": 351.0,
        "FontSize": 30.0,
        "InitialTop": -252.20259812458448,
        "InitialHeight": 145.0,
        "TextblockHeight": 72.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "43be8e6d78114d86a63f70925c8eccd0",
        "Title": "Model Learning with tensorflow",
        "Nodes": [
          "995e33f2d0fb4878b8d60b8b8aa0f371",
          "fe5b38500fef4218b661c63787d75f98",
          "0ef3e663904248799472ae709fe4c02d",
          "fa03987dc4a64d74b87ed89e39f2c988"
        ],
        "Left": 2108.4351576950285,
        "Top": -772.41128609720352,
        "Width": 662.59811271229319,
        "Height": 268.99382416686342,
        "FontSize": 36.0,
        "InitialTop": -719.41128609720352,
        "InitialHeight": 311.99382416686342,
        "TextblockHeight": 43.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "fa03987dc4a64d74b87ed89e39f2c988",
        "Title": "Package Springs",
        "Nodes": [],
        "Left": 2601.6138464528267,
        "Top": -552.4174619303401,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -74.12531210360433,
    "Y": 560.16173041943955,
    "Zoom": 0.50013849385104259
  }
}